<UserControl x:Class="Lama.UI.UC.TournoiControls.GrilleControls.EquipesUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Lama.UI.UC.TournoiControls.GrilleControls"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>

        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="FontSize" Value="11" />
        </Style>

        <Style TargetType="Label" x:Key="equipe" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding EstGagnant}" Value="True">
                    <Setter Property="Foreground" Value="Lime" />
                </DataTrigger>
                <DataTrigger Binding="{Binding EstGagnant}" Value="{x:Null}">
                    <Setter Property="Foreground" Value="{StaticResource IdealForegroundColorBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="StackPanel" x:Key="sp">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Width" Value="180" />
        </Style>

        <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=Utilisateur.EstConnecte}" Value="False">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="RadioButton">
                                <Grid x:Name="Grid">
                                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsKeyboardFocused" Value="true">
                                        <Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" TargetName="Border"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" TargetName="Border"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="true"/>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                                        <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Expander" x:Key="stats">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{StaticResource AccentBaseColorBrush}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=Utilisateur.EstConnecte}" Value="False">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <ItemsPanelTemplate x:Key="wp">
            <WrapPanel>
                <WrapPanel.Style>
                    <Style TargetType="WrapPanel">
                        <Setter Property="Orientation" Value="Horizontal" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="Margin" Value="5" />
                    </Style>
                </WrapPanel.Style>
            </WrapPanel>
        </ItemsPanelTemplate>

    </UserControl.Resources>

    <ItemsControl ItemsSource="{Binding LstEquipes}" ItemsPanel="{StaticResource wp}">

        <ItemsControl.ItemTemplate>
            <DataTemplate>

                <StackPanel Style="{StaticResource sp}" Width="160">
                    <RadioButton IsChecked="{Binding EstGagnant}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
                                 GroupName="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.Nom}"                                 
                                 Click="RadioButton_Click">
                        <Label Style="{StaticResource equipe}" Content="{Binding Equipe.Nom}" />
                    </RadioButton>


                    <Expander Style="{StaticResource stats}" HorizontalAlignment="Center">
                        <Expander.Header>

                            <ItemsControl ItemsSource="{Binding LstStats.Stats}" HorizontalAlignment="Center">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Margin="5"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>

                                        <Label Foreground="{StaticResource IdealForegroundDisabledBrush}" Content="{Binding Value}" ToolTip="{Binding Key}" />

                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                        </Expander.Header>

                        <StackPanel>

                            <ItemsControl ItemsSource="{Binding LstStats.Stats}" PreviewTextInput="DataGrid_PreviewTextInput" DataObject.Pasting="DataGrid_Pasting" DataContext="{Binding}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>

                                        <UniformGrid Columns="2" HorizontalAlignment="Center" Width="160">
                                            <Label Foreground="{StaticResource IdealForegroundDisabledBrush}" FontSize="9" Content="{Binding Key}" />
                                            <local:CustomNumericUpDown BorderThickness="0" Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" FontSize="9" Minimum="0" Background="Transparent" Stat="{Binding Key}" Equipe="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.Equipe.Nom}" ValueChanged="CustomNumericUpDown_ValueChanged" />
                                        </UniformGrid>

                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                        </StackPanel>

                    </Expander>
                </StackPanel>

            </DataTemplate>
        </ItemsControl.ItemTemplate>

    </ItemsControl>
</UserControl>

